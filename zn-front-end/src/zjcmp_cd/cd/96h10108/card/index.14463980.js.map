{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"nc-lightapp-front\"","webpack://[name]/./src/zjcmp_cd/cd/96h10108/constant/index.js","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/cardOperator.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/afterHeadEvent.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/buttonVisibilityControl.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/bodyButtonClick.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/index.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/initTemplate.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/buttonClick.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/beforeHeadEvent.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/beforeTableEvent.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/afterTableEvent.js","webpack://[name]/./src/zjcmp_cd/cd/96h10108/card/events/bodySelectedEvent.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","APPCODE","BILL_TYPE_CODE","MULTILANG","domainName","LIST","page_title","page_code","search_id","table_id","head_btn_code","body_btn_code","CARD","form_id","table_code","table_edit_code","table_browse_code","shoulder_btn_code","DATASOURCE","LIST_BUTTON","SEARCH_CACHE","dataSource","CARD_CACHE","base_path","REQUEST_URL","save","delete","queryCard","queryList","queryListByPks","commit","unCommit","toCard","toList","linkGroup","attachment","approvalLink","billTrack","print","output","refresh","bodyUpdate","bodyDelete","bodyCommit","bodyUnCommit","copy","CARD_BUTTON","LIST_DISABLED_BUTTON","saveAdd","saveCommit","cancel","update","back","addRow","deleteRow","copyRows","pasteTail","pasteCancel","expand","insertRow","delRow","copyRow","fold","unfold","pasteHere","CARD_DISABLED_BUTTON","CARD_ADD_DISABLED_BUTTON","FIELD","org","billStatus","ts","PRIMARY_KEY","head_id","body_id","bill_no","id","STATUS","status","edit","browse","add","info","warning","success","danger","NOSTATE","NOPASS","PASSING","GOINGON","COMMIT","cardBack","props","pushTo","cardCreate","setUrlParam","initMetaByPkorg","button","setButtonDisabled","cardTable","setAllCheckboxAble","clearAll","setByStatus","context","getDefData","cardCache","pk_org","org_Name","form","setFormItemsValue","display","afterHeadEvent","copyClear","cardSave","Promise","resolve","rejected","isCheckNow","checkTableRequired","data","createMasterChildData","validateToSave","getUrlParam","ajax","url","res","toast","color","content","json","formulamsg","Array","length","dealFormulamsg","head","rows","values","setAllFormValue","body","setTableData","addCache","updateCache","cardUpdate","cardCopy","isCopy","cardDelete","pk","getFormItemsValue","pkMapTs","Map","set","pks","nextId","getNextId","deleteCacheById","lastId","getCardData","cardCancel","resetTableData","currentLastId","getCurrentLastId","cardRefresh","pageClick","cardAttachment","billId","billNo","this","setState","showUploader","state","billInfo","cardBillTrack","showBillTrack","billTrackBillId","billTrackBillType","cardLinkApprove","showApproveDetail","cardCommit","workflow","compositeData","compositeDisplay","curPk","cardUnCommit","getCacheById","buttonVisibilityControl","BillHeadInfo","setBillHeadInfoVisible","showBackBtn","showBillCode","billCode","resMetaAfterPkorgEdit","EmptyAllFormValue","setColValue","num","getNumberOfRows","updateArray","push","index","setRowStatusByIndexs","isRefresh","callBack","cardData","pagecode","error","message","oldValue","buttons","getButtons","isBrowse","btnObj","showBtn","editBtn","unionBtn","parentButtons","map","item","allBtns","commonBtn","includes","setButtonVisible","setStatus","setFormStatus","bodyButtonClick","text","record","checkedRows","getCheckedRows","checkedIndex","delRowsByIndex","openTabModel","toggleTabRowView","pasteRow","copyControl","lastIndex","insertRowsAfterIndex","getPasteRows","selectAllRows","flag","isPaste","deepClone","selected","NCAffix","base","Card","MultiInit","getMultiLang","callback","inlt","initTemplate","onbeforeunload","getStatus","cardPagination","createCardPagination","createForm","createCardTable","createBillHeadInfo","NCUploader","high","BillTrack","ApprovalTrans","ApproveDetail","className","title","backBtnClick","buttonClick","createButtonApp","area","onButtonClick","style","float","pkname","handlePageInfoChange","onAfterEvent","onBeforeEvent","beforeHeadEvent","tableHead","getTableHead","showCheck","showIndex","onSelected","bodySelectedEvent","onSelectedAll","bodySelectedAllEvent","beforeTableEvent","afterTableEvent","modelSave","undefined","placement","onHide","show","close","type","getResult","getAssignUser","compositeTurnOff","billtype","billid","Component","popContainer","document","querySelector","userObj","createPage","billinfo","headcode","bodycode","createUIDom","setButtons","template","meta","modifierMeta","setMeta","getBusinessInfo","businessDate","groupName","groupId","userName","userId","setDefData","items","attrcode","queryCondition","funcode","getSearchParam","keys","gridrelation","label","itemtype","fixed","visible","width","render","buttonAry","expandRowStatus","createOprationButton","buttonLimit","hotkey","isFromSide","then","closeModel","promptBox","beSureBtnClick","changedrows","method"],"mappings":"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","file":"zjcmp_cd/cd/96h10108/card/index.14463980.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nc-lightapp-front\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nc-lightapp-front\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zjcmp_cd/cd/96h10108/card/index\"] = factory(require(\"nc-lightapp-front\"), require(\"react\"));\n\telse\n\t\troot[\"zjcmp_cd/cd/96h10108/card/index\"] = factory(root[\"nc-lightapp-front\"], root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/**\r\n* @description: 常量\r\n*/\r\n\r\n//应用编码\r\nexport const APPCODE = '96H10108';\r\n\r\n//单据类型\r\nexport const BILL_TYPE_CODE = 'WYDJ';\r\n\r\n/**\r\n* @description: 多语\r\n* @param moduleId: 多语资源名\r\n* @param domainName: 工程名\r\n*/\r\nexport const MULTILANG = {\r\n        moduleId: '96H10108',\r\n        domainName: 'zjcmp_cd'\r\n};\r\n\r\n/**\r\n * 列表\r\n */\r\nexport const LIST = {\r\n        page_title: '96H10108-000011',                  //页面标题 /* 国际化处理： 投融资费用*/\r\n\r\n        page_code: '96H10108_LIST',                     //页面编码\r\n\r\n        search_id: 'list_query',                        //查询区 \r\n        table_id: 'list_head',                          //表格区 \r\n\r\n        head_btn_code: 'list_head',                     //表头按钮区 \r\n        body_btn_code: 'list_inner',                                    //表体表格按钮区\r\n};\r\n\r\n/**\r\n * 卡片\r\n */\r\nexport const CARD = {\r\n        page_title: '96H10108-000011',                   //页面标题 /* 国际化处理： 投融资费用*/\r\n\r\n        page_code: '96H10108_CARD',                      //页面编码\r\n\r\n        form_id: 'card_head',                            //表头表单区\r\n        table_code: 'card_body',                         //表体表格区\r\n        table_edit_code: 'card_body_edit',               //表体表格编辑态侧拉区\r\n        table_browse_code: 'card_body_browse',           //表体表格浏览态下拉区\r\n\r\n        head_btn_code: 'card_head',                      //表头按钮区\r\n        shoulder_btn_code: 'tabs_head',                  //表体肩部按钮区\r\n        body_btn_code: 'tabs_body'                       //表体表格按钮区\r\n};\r\n\r\n//领域名.模块名.节点名.自定义名\r\n//缓存标示\r\nexport const DATASOURCE = 'tm.fmc.cost.datasource';\r\n\r\n//查询区域缓存 \r\nexport const SEARCH_CACHE = {\r\n        key: 'tm.fmc.cost.SEARCH_CACHE',                 //查询区域缓存Key\r\n        dataSource: DATASOURCE                                           //查询区域缓存数据的名称空间\r\n}\r\n\r\n//卡片缓存 \r\nexport const CARD_CACHE = {\r\n        key: 'tm.fmc.cost.CARD_CACHE',                   //卡片区域缓存Key\r\n        dataSource: DATASOURCE                                           //卡片区域缓存数据的名称空间\r\n}\r\n\r\n//请求基础路径\r\nexport const base_path = '/nccloud/zjcmp_cd/cd/';\r\n\r\n//url\r\nexport const REQUEST_URL = {\r\n        save: `/nccloud/zjcmp_cd/cd/savetam_registerVO.do`,                       //保存\r\n        delete: `/nccloud/zjcmp_cd/cd/deletetam_registerVO.do`,                        //删除\r\n        queryCard: `/nccloud/zjcmp_cd/cd/querycardtam_registerVO.do`,                      //卡片查询\r\n        queryList: `/nccloud/zjcmp_cd/cd/querypagetam_registerVO.do`,              //列表查询\r\n        queryListByPks: `/nccloud/zjcmp_cd/cd/querypagebypktam_registerVO.do`,     //列表分页查询\r\n        commit: `/nccloud/zjcmp_cd/cd/committam_registerVO.do`,                   //提交\r\n        unCommit: `/nccloud/zjcmp_cd/cd/uncommittam_registerVO.do`,               //收回\r\n\r\n        toCard: '/card',\r\n        toList: '/list'\r\n};\r\n\r\nexport const LIST_BUTTON = {\r\n        create: 'AddBtn',\r\n        delete: 'DelBtn',\r\n        commit: 'CommitBtn',\r\n        unCommit: 'UnCommitBtn',\r\n        linkGroup: 'JointBtn',\r\n        attachment: 'AttachmentBtn',\r\n        approvalLink: 'DetailBtn',\r\n        billTrack: 'TrackBtn',\r\n        print: 'PrintBtn',\r\n        output: 'OutputBtn',\r\n        refresh: 'RefreshBtn',\r\n\r\n        bodyUpdate: 'edit',\r\n        bodyDelete: 'delete',\r\n        bodyCommit: 'commit',\r\n        bodyUnCommit: 'unCommit',\r\n        copy: 'copy'\r\n};\r\n\r\n//列表默认禁用按钮\r\nexport const LIST_DISABLED_BUTTON = [LIST_BUTTON.delete, LIST_BUTTON.commit, LIST_BUTTON.unCommit, LIST_BUTTON.linkGroup, LIST_BUTTON.approvalLink, LIST_BUTTON.billTrack,\r\nLIST_BUTTON.attachment, LIST_BUTTON.print, LIST_BUTTON.output];\r\n\r\nexport const CARD_BUTTON = {\r\n        save: 'SaveBtn',\r\n        saveAdd: 'SaveAddBtn',\r\n        saveCommit: 'SaveCommitBtn',\r\n        cancel: 'CancelBtn',\r\n        create: 'CreateBtn',\r\n        update: 'UpdateBtn',\r\n        delete: 'DeleteBtn',\r\n        copy: 'CopyBtn',\r\n        commit: 'CommitBtn',\r\n        unCommit: 'UnCommitBtn',\r\n        attachment: 'AttachmentBtn',\r\n        approvalLink: 'DetailBtn',\r\n        billTrack: 'TrackBtn',\r\n        print: 'PrintBtn',\r\n        output: 'OutputBtn',\r\n        refresh: 'RefreshBtn',\r\n        back: 'Back',\r\n\r\n        addRow: 'addRow',\r\n        deleteRow: 'deleteRow',\r\n        copyRows: 'copyRows',\r\n        pasteTail: 'pasteTail',\r\n        pasteCancel: 'pasteCancel',\r\n\r\n        expand: 'expand',\r\n        insertRow: 'insertRow',\r\n        delRow: 'delRow',\r\n        copyRow: 'copyRow',\r\n        fold: 'fold',\r\n        unfold: 'unfold',\r\n        pasteHere: 'pasteHere'\r\n};\r\n\r\n//卡片默认禁用按钮\r\nexport const CARD_DISABLED_BUTTON = [CARD_BUTTON.deleteRow, CARD_BUTTON.copyRows];\r\n//卡片新增禁用按钮\r\nexport const CARD_ADD_DISABLED_BUTTON = [CARD_BUTTON.addRow, CARD_BUTTON.save, CARD_BUTTON.saveAdd, CARD_BUTTON.saveCommit];\r\n\r\n//字段名\r\nexport const FIELD = {\r\n        org: 'pk_org',                                                   //组织\r\n        //orgV: 'pk_org_v',                                              //组织多版本\r\n        billStatus: 'approvestatus',                             //单据状态字段（用以按钮控制）\r\n        ts: 'ts'                                                                 //时间戳\r\n};\r\n\r\n//主属性字段名\r\nexport const PRIMARY_KEY = {\r\n        head_id: 'pk_register',           //表头主键字段名\r\n        body_id: 'pk_register_b',           //表体主键字段名\r\n        bill_no: 'billno',                                               //单据编号字段名\r\n        id: 'id'                                                                 //单据前端缓存标识\r\n};\r\n\r\n//状态\r\nexport const STATUS = {\r\n        status: 'status',                                                //状态\r\n\r\n        edit: 'edit',                                            //编辑态\r\n        browse: 'browse',                                        //浏览态\r\n        add: 'add',                                                              //新增态\r\n\r\n        info: 'info',                                                    //帮助\r\n        warning: 'warning',                                              //警告\r\n        success: 'success',                                              //成功\r\n        danger: 'danger',                                                //出错\r\n\r\n        NOSTATE: '-1',                                                   //自由 态\r\n        NOPASS: '0',                                                     //未通过 态\r\n        PASSING: '1',                                                    //通过 态\r\n        GOINGON: '2',                                                    //进行中 态\r\n        COMMIT: '3'                                                              //提交 态\r\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import { ajax, cardCache, toast } from 'nc-lightapp-front';\r\nimport { REQUEST_URL, CARD, PRIMARY_KEY, CARD_BUTTON, CARD_CACHE, DATASOURCE, STATUS, FIELD, BILL_TYPE_CODE, CARD_ADD_DISABLED_BUTTON } from '../../constant';\r\nimport { buttonVisibilityControl } from './buttonVisibilityControl';\r\nimport { afterHeadEvent } from './afterHeadEvent';\r\n\r\nlet { updateCache, addCache, getNextId, deleteCacheById, getCacheById, getCurrentLastId } = cardCache;\r\n\r\n//卡片返回\r\nexport function cardBack(props) {\r\n    props.pushTo(REQUEST_URL.toList, {});\r\n}\r\n\r\n\r\n//卡片新增\r\nexport function cardCreate(props) {\r\n    props.setUrlParam({ status: STATUS.add });\r\n    //单据有主组织，新增时,将其他字段设置为不可编辑\r\n    props.initMetaByPkorg();\r\n    props.button.setButtonDisabled(CARD_ADD_DISABLED_BUTTON, true);\r\n    props.cardTable.setAllCheckboxAble(CARD.table_code, false);\r\n    clearAll(props);\r\n    setByStatus(props);\r\n\r\n    let { getDefData } = cardCache;\r\n    let context = getDefData(CARD_CACHE.key, CARD_CACHE.dataSource);\r\n    if (context) {\r\n        let { pk_org, org_Name} = context;\r\n        props.form.setFormItemsValue(CARD.form_id, {\r\n            [FIELD.org]: { value: pk_org, display: org_Name }\r\n        });\r\n        afterHeadEvent(props, CARD.form_id, FIELD.org, { display: org_Name, value: pk_org }, { display: null, value: null });\r\n    }\r\n}\r\n\r\n/**\r\n * 根据状态设置卡片\r\n * @param {*} status  \r\n */\r\nfunction setByStatus(props) {\r\n    buttonVisibilityControl(props);\r\n    let status = props.getUrlParam(STATUS.status);\r\n    //设置单据编号\r\n    props.BillHeadInfo.setBillHeadInfoVisible({\r\n        showBackBtn: status === STATUS.browse,\r\n        showBillCode: status === STATUS.browse,\r\n        billCode: props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.bill_no) && props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.bill_no).value\r\n    });\r\n    if (status !== STATUS.add) {\r\n        props.resMetaAfterPkorgEdit(); //选择主组织以后，恢复其他字段的编辑性\r\n    }\r\n    // orgVersionView(props);//组织版本视图\r\n}\r\n\r\n/**\r\n * 组织多版本视图\r\n * @param {*} props \r\n * @param {*} headCode \r\n */\r\nfunction orgVersionView(props) {\r\n    let status = props.getUrlParam(STATUS.status);\r\n    //浏览态显示组织版本，编辑态显示组织\r\n    let showflag = status == STATUS.browse;\r\n    let obj = {};\r\n    obj[FIELD.org] = !showflag;\r\n    props.form.setFormItemsVisible(CARD.form_id, obj);\r\n}\r\n\r\n//清空表头表体数据\r\nfunction clearAll(props) {\r\n    props.form.EmptyAllFormValue(CARD.form_id);\r\n    props.cardTable.setTableData(CARD.table_code, { rows: [] });\r\n}\r\n\r\n//复制时清空数据\r\nexport function copyClear(props) {\r\n    if (props.getUrlParam('isCopy')) {\r\n        props.form.setFormItemsValue(CARD.form_id, {\r\n            [PRIMARY_KEY.head_id]: { value: null, display: null },\r\n            [PRIMARY_KEY.bill_no]: { value: null, display: null },\r\n            [FIELD.billStatus]: { value: STATUS.NOSTATE, display: '自由' }\r\n\r\n        });\r\n        props.cardTable.setColValue(CARD.table_code, PRIMARY_KEY.head_id, { value: null, display: null });\r\n        props.cardTable.setColValue(CARD.table_code, PRIMARY_KEY.body_id, { value: null, display: null });\r\n\r\n        var num = props.cardTable.getNumberOfRows(CARD.table_code, false);\r\n        var updateArray = new Array();\r\n        for (var i = 0; i < num; i++) {\r\n            updateArray.push({\r\n                index: i,\r\n                status: '2',//新增态\r\n            });\r\n        }\r\n        props.cardTable.setRowStatusByIndexs(CARD.table_code, updateArray);\r\n\r\n        props.setUrlParam({\r\n            id: null,\r\n            isCopy: false,\r\n            status: STATUS.add\r\n        });\r\n    }\r\n}\r\n\r\n//卡片保存\r\nexport function cardSave(props) {\r\n    return new Promise((resolve, rejected) => {\r\n        let flag = props.form.isCheckNow(CARD.form_id) && props.cardTable.checkTableRequired(CARD.table_code);\r\n        if (flag) {\r\n            let data = props.createMasterChildData(CARD.page_code, CARD.form_id, CARD.table_code, 'cardTable');\r\n            props.validateToSave(data, () => {\r\n\r\n                let status = props.getUrlParam(STATUS.status);\r\n                ajax({\r\n                    url: REQUEST_URL.save,\r\n                    data: data,\r\n                    success: (res) => {\r\n                        let { success, data } = res;\r\n                        if (success) {\r\n                            toast({ color: STATUS.success, content: props.json['96H10108-000004'] });/* 国际化处理： 保存成功*/\r\n\r\n                            if (res.formulamsg && res.formulamsg instanceof Array && res.formulamsg.length > 0) {\r\n                                props.dealFormulamsg(res.formulamsg);\r\n                            }\r\n\r\n                            let id = null;\r\n                            if (res.data) {\r\n                                if (res.data.head && res.data.head[CARD.form_id]) {\r\n                                    id = res.data.head[CARD.form_id].rows[0].values[PRIMARY_KEY.head_id].value;\r\n                                    props.form.setAllFormValue({ [CARD.form_id]: res.data.head[CARD.form_id] });\r\n                                }\r\n                                if (res.data.body && res.data.body[CARD.table_code]) {\r\n                                    props.cardTable.setTableData(CARD.table_code, res.data.body[CARD.table_code]);\r\n                                }\r\n                            }\r\n\r\n                            props.setUrlParam({\r\n                                id,\r\n                                status: STATUS.browse\r\n                            });\r\n\r\n                            // 缓存\r\n                            if (status === STATUS.add) {\r\n                                addCache(id, data, CARD.form_id, DATASOURCE);\r\n                            } else {\r\n                                updateCache(PRIMARY_KEY.head_id, id, data, CARD.form_id, DATASOURCE);\r\n                            }\r\n\r\n                            setByStatus(props);\r\n\r\n                            resolve(true);\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }, { [CARD.table_code]: 'cardTable' });\r\n        }\r\n    });\r\n}\r\n\r\n//卡片修改\r\nexport function cardUpdate(props) {\r\n    props.setUrlParam({ status: STATUS.edit });\r\n    setByStatus(props);\r\n}\r\n\r\n//卡片修改\r\nexport function cardCopy(props) {\r\n    props.setUrlParam({ isCopy: true });\r\n    copyClear(props);\r\n    setByStatus(props);\r\n}\r\n\r\n//卡片删除\r\nexport function cardDelete(props) {\r\n    let pk = props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id).value || props.getUrlParam(PRIMARY_KEY.id);\r\n    let ts = props.form.getFormItemsValue(CARD.form_id, FIELD.ts) && props.form.getFormItemsValue(CARD.form_id, FIELD.ts).value;\r\n    let pkMapTs = new Map();\r\n    //主键与tsMap\r\n    if (pk && ts) {\r\n        pkMapTs.set(pk, ts);\r\n    }\r\n    let data = { pks: [pk], pkMapTs };\r\n    ajax({\r\n        url: REQUEST_URL.delete,\r\n        data: data,\r\n        success: (res) => {\r\n            if (res.success) {\r\n                toast({ color: STATUS.success, content: props.json['96H10108-000005'] });/* 国际化处理： 删除成功*/\r\n\r\n                // 获取下一条数据的id\r\n                let nextId = getNextId(pk, DATASOURCE);\r\n                //删除缓存\r\n                deleteCacheById(PRIMARY_KEY.head_id, pk, DATASOURCE);\r\n                let lastId = nextId ? nextId : null;\r\n                props.setUrlParam({ status: STATUS.browse, id: lastId });\r\n                if (lastId) {\r\n                    getCardData(props, lastId);\r\n                } else {// 删除的是最后一个的操作\r\n                    clearAll(props);\r\n                    setByStatus(props);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * 卡片详情\r\n * @param {*} id         单据id\r\n * @param {*} isRefresh  是否刷新按钮，是的话不取缓存数据，直接调取接口，并addCache, 默认否\r\n */\r\nexport function getCardData(props, id, isRefresh = false, callBack) {\r\n    clearAll(props);\r\n    if (!isRefresh) {\r\n        let cardData = getCacheById(id, DATASOURCE);\r\n        if (cardData) {//有缓存\r\n            cardData.head && props.form.setAllFormValue({ [CARD.form_id]: cardData.head[CARD.form_id] });\r\n            cardData.body && props.cardTable.setTableData(CARD.table_code, cardData.body[CARD.table_code]);\r\n            setByStatus(props);\r\n            return;\r\n        }\r\n    }\r\n    ajax({\r\n        url: REQUEST_URL.queryCard,\r\n        data: {\r\n            pk: id,\r\n            pagecode: CARD.page_code\r\n        },\r\n        success: (res) => {\r\n            let { success, data } = res;\r\n            if (success) {\r\n                if (data && data.head) {\r\n                    props.form.setAllFormValue({ [CARD.form_id]: data.head[CARD.form_id] });\r\n                }\r\n                if (data && data.body) {\r\n                    props.cardTable.setTableData(CARD.table_code, data.body[CARD.table_code]);\r\n                }\r\n                // 更新缓存\r\n                updateCache(PRIMARY_KEY.head_id, id, data, CARD.form_id, DATASOURCE);\r\n                callBack && callBack(props);\r\n                setByStatus(props);\r\n            }\r\n        },\r\n        error: (res) => {\r\n            toast({ color: STATUS.danger, content: res.message });\r\n            clearAll(props);\r\n            setByStatus(props);\r\n        }\r\n    });\r\n}\r\n\r\n//卡片取消\r\nexport function cardCancel(props) {\r\n    let id = props.getUrlParam(PRIMARY_KEY.id);\r\n    props.setUrlParam({ status: STATUS.browse });\r\n    if (id) { //有id切换编辑态\r\n        props.form.cancel(CARD.form_id);\r\n        props.cardTable.resetTableData(CARD.table_code);\r\n        getCardData(props, id);\r\n    } else { //没有id查缓存中最后一条数据\r\n        let currentLastId = getCurrentLastId(DATASOURCE);\r\n        let lastId = currentLastId ? currentLastId : null;\r\n        props.setUrlParam({ id: lastId });\r\n        if (lastId) {\r\n            getCardData(props, lastId);\r\n        } else {\r\n            clearAll(props);\r\n            setByStatus(props);\r\n        }\r\n    }\r\n}\r\n\r\n//卡片刷新\r\nexport function cardRefresh(props) {\r\n    let id = props.getUrlParam(PRIMARY_KEY.id);\r\n    getCardData(props, id, true);\r\n}\r\n\r\n/**\r\n * 卡片分页\r\n * @param {*} props  页面内置对象\r\n * @param {*} pk    下一页的pk\r\n */\r\nexport function pageClick(props, id) {\r\n    props.setUrlParam({ status: STATUS.browse, id });\r\n    getCardData(props, id);\r\n}\r\n\r\n\r\n//卡片附件\r\nexport function cardAttachment(props) {\r\n    let billId = props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id) && props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id).value;\r\n    let billNo = props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.bill_no) && props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.bill_no).value;\r\n    this.setState({\r\n        showUploader: !this.state.showUploader,\r\n        billInfo: { billId, billNo }\r\n    });\r\n}\r\n\r\n//卡片单据追溯\r\nexport function cardBillTrack(props) {\r\n    let billId = props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id) && props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id).value;\r\n    this.setState({\r\n        showBillTrack: true,\r\n        billTrackBillId: billId,\r\n        billTrackBillType: BILL_TYPE_CODE\r\n    });\r\n}\r\n\r\n//卡片联查审批详情\r\nexport function cardLinkApprove(props) {\r\n    let billId = props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id) && props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id).value;\r\n    this.setState({\r\n        showApproveDetail: true,\r\n        billId: billId\r\n    });\r\n}\r\n\r\n\r\n//卡片提交\r\nexport function cardCommit(props, data) {\r\n    if (!data) {\r\n        let pk = props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id) && props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id).value;\r\n        let ts = props.form.getFormItemsValue(CARD.form_id, FIELD.ts) && props.form.getFormItemsValue(CARD.form_id, FIELD.ts).value;\r\n        let pkMapTs = new Map();\r\n        //主键与tsMap\r\n        if (pk && ts) {\r\n            pkMapTs.set(pk, ts);\r\n        }\r\n        data = { pks: [pk], pkMapTs };\r\n    }\r\n    ajax({\r\n        url: REQUEST_URL.commit,\r\n        data: data,\r\n        success: (res) => {\r\n            if (res.success) { //成功\r\n                if (res.data && res.data.workflow && (res.data.workflow == 'approveflow' || res.data.workflow == 'workflow')) {\r\n                    this.setState({\r\n                        compositeData: res.data,\r\n                        compositeDisplay: true,\r\n                        curPk: data.pks\r\n                    });\r\n                } else {\r\n                    cardRefresh(props);\r\n                }\r\n            } else { //失败\r\n                toast({ color: STATUS.warning, content: props.json['96H10108-000015'] });/* 国际化处理： 提交失败*/\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//卡片收回\r\nexport function cardUnCommit(props) {\r\n    let pk = props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id) && props.form.getFormItemsValue(CARD.form_id, PRIMARY_KEY.head_id).value;\r\n    let ts = props.form.getFormItemsValue(CARD.form_id, FIELD.ts) && props.form.getFormItemsValue(CARD.form_id, FIELD.ts).value;\r\n    let pkMapTs = new Map();\r\n    //主键与tsMap\r\n    if (pk && ts) {\r\n        pkMapTs.set(pk, ts);\r\n    }\r\n    let data = { pks: [pk], pkMapTs };\r\n    ajax({\r\n        url: REQUEST_URL.unCommit,\r\n        data: data,\r\n        success: (res) => {\r\n            if (res.success) { //成功\r\n                cardRefresh(props);\r\n            } else { //失败\r\n                toast({ color: STATUS.warning, content: props.json['96H10108-000017'] });/* 国际化处理： 收回失败*/\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n","import { FIELD, CARD_ADD_DISABLED_BUTTON, CARD } from \"../../constant\";\r\n/**\r\n* @description: 表头编辑后事件\r\n* @param: moduleId 区域编码\r\n* @param: key 当前字段编码\r\n*/\r\nexport function afterHeadEvent(props, moduleId, key, value, oldValue) {\r\n        if (key === FIELD.org) {\r\n                props.resMetaAfterPkorgEdit(); //选择主组织以后，恢复其他字段的编辑性\r\n                props.button.setButtonDisabled(CARD_ADD_DISABLED_BUTTON, false);//恢复增行编辑性\r\n                props.cardTable.setAllCheckboxAble(CARD.table_code, true);\r\n        }\r\n}\r\n","import { CARD, CARD_BUTTON, STATUS, PRIMARY_KEY, FIELD, CARD_DISABLED_BUTTON } from '../../constant';\r\n\r\n/**\r\n* @description: 卡片按钮可见性\r\n*/\r\nexport function buttonVisibilityControl(props) {\r\n\r\n    /** \r\n     * 此处应根据实际情况自由发挥\r\n     * 目标就是将某个状态下的某些按钮展示或隐藏\r\n     * 示例代码可能过于繁琐且难以理解\r\n     * \r\n     * 可调用如下方法实现\r\n     * props.button.setButtonVisible();\r\n     * props.button.setButtonDisabled();\r\n     * \r\n     * 例如\r\n     * let btn1 = [ 编辑态下显示的按钮 ];\r\n     * let btn2 = [ 编辑态下不显示的按钮 ];\r\n     * \r\n     * props.button.setButtonVisible(btn1,true);\r\n     * props.button.setButtonVisible(btn2,false);\r\n     * 即可控制编辑态下的显示按钮。\r\n    */\r\n\r\n    let buttons = props.button.getButtons();\r\n    if (!buttons || buttons.length == 0) {\r\n        //模板没渲染完成，暂不渲染按钮\r\n        return;\r\n    }\r\n    let status = props.getUrlParam(STATUS.status);\r\n    let id = props.getUrlParam(PRIMARY_KEY.id);\r\n    let isBrowse = status === STATUS.browse;\r\n    //单据状态\r\n    let billStatus = props.form.getFormItemsValue(CARD.form_id, FIELD.billStatus) && props.form.getFormItemsValue(CARD.form_id, FIELD.billStatus).value;\r\n\r\n    let btnObj = {};\r\n    //将要显示的按钮\r\n    let showBtn = [];\r\n    //编辑态显示按钮\r\n    let editBtn = [CARD_BUTTON.save, CARD_BUTTON.saveAdd, CARD_BUTTON.saveCommit, CARD_BUTTON.cancel,\r\n    CARD_BUTTON.addRow, CARD_BUTTON.deleteRow, CARD_BUTTON.copyRows,\r\n    CARD_BUTTON.insertRow, CARD_BUTTON.delRow, CARD_BUTTON.copyRow, CARD_BUTTON.pasteHere, CARD_BUTTON.expand];\r\n    //联查按钮\r\n    let unionBtn = [CARD_BUTTON.billTrack, CARD_BUTTON.approvalLink];\r\n    //获得所有的按钮的编码（不包括按钮组下的按钮）\r\n    let parentButtons = buttons.map(item => item.key);\r\n    //(有重复的按钮编码，但无妨)\r\n    let allBtns = [...parentButtons, ...editBtn, ...unionBtn, CARD_BUTTON.create, CARD_BUTTON.update, CARD_BUTTON.delete, CARD_BUTTON.copy, CARD_BUTTON.output];\r\n    if (!isBrowse) { //编辑态\r\n\r\n        showBtn = editBtn;\r\n\r\n    } else { //浏览态\r\n        if (!id) {//点击新增然后点击取消后\r\n\r\n            showBtn = [CARD_BUTTON.create];\r\n\r\n        } else {//单据浏览态\r\n            let commonBtn = [CARD_BUTTON.create, CARD_BUTTON.copy, CARD_BUTTON.attachment, ...unionBtn, CARD_BUTTON.print, CARD_BUTTON.output, CARD_BUTTON.refresh, CARD_BUTTON.fold, CARD_BUTTON.unfold];\r\n            switch (billStatus) {\r\n                case STATUS.NOSTATE:\r\n                    showBtn = [CARD_BUTTON.update, CARD_BUTTON.delete, CARD_BUTTON.commit, ...commonBtn];\r\n                    break;\r\n                case STATUS.PASSING:\r\n                case STATUS.COMMIT:\r\n                case STATUS.GOINGON:\r\n                    showBtn = [CARD_BUTTON.unCommit, ...commonBtn];\r\n                    break;\r\n                default:\r\n                    showBtn = [...commonBtn];\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    for (let item of allBtns) {\r\n        btnObj[item] = showBtn.includes(item);\r\n    }\r\n    //控制按钮显示与否\r\n    props.button.setButtonVisible(btnObj);\r\n    //设置按钮禁用\r\n    props.button.setButtonDisabled(CARD_DISABLED_BUTTON, true);\r\n    //设置卡片状态\r\n    props.cardTable.setStatus(CARD.table_code, isBrowse ? STATUS.browse : STATUS.edit);\r\n    props.form.setFormStatus(CARD.form_id, status);\r\n}\r\n","import { deepClone } from 'nc-lightapp-front';\r\nimport { CARD_BUTTON, CARD, STATUS, CARD_DISABLED_BUTTON, PRIMARY_KEY } from '../../constant';\r\n\r\n/**\r\n* @description: 表体按钮点击事件\r\n* @param: key 当前触发按钮名称\r\n* @param: index 当前行序\r\n* @param: record 当前行信息\r\n*/\r\nexport function bodyButtonClick(props, key, text, record, index) {\r\n\r\n    switch (key) {\r\n        //肩 新增\r\n        case CARD_BUTTON.addRow:\r\n            props.cardTable.addRow(CARD.table_code);\r\n            break;\r\n\r\n        //肩 删除\r\n        case CARD_BUTTON.deleteRow:\r\n            let checkedRows = props.cardTable.getCheckedRows(CARD.table_code);\r\n            let checkedIndex = checkedRows && checkedRows.map(item => item.index);\r\n            if (checkedRows.length > 0) {\r\n                props.cardTable.delRowsByIndex(CARD.table_code, checkedIndex);\r\n                props.button.setButtonDisabled(CARD_DISABLED_BUTTON, true);\r\n            }\r\n            break;\r\n\r\n        //行 展开\r\n        case CARD_BUTTON.expand:\r\n            props.cardTable.openTabModel(CARD.table_code, STATUS.edit, record, index);\r\n            break;\r\n\r\n        //行 展开（浏览态）\r\n        case CARD_BUTTON.unfold:\r\n        //行 收起\r\n        case CARD_BUTTON.fold:\r\n            props.cardTable.toggleTabRowView(CARD.table_code, record);\r\n            break;\r\n\r\n        //行 插行\r\n        case CARD_BUTTON.insertRow:\r\n            props.cardTable.addRow(CARD.table_code, index);\r\n            break;\r\n\r\n        //行 删行\r\n        case CARD_BUTTON.delRow:\r\n            props.cardTable.delRowsByIndex(CARD.table_code, index);\r\n            break;\r\n\r\n        //行 复制行\r\n        case CARD_BUTTON.copyRow:\r\n            props.cardTable.pasteRow(CARD.table_code, index, [PRIMARY_KEY.body_id]);\r\n            break;\r\n\r\n        //肩 复制行\r\n        case CARD_BUTTON.copyRows:\r\n            copyControl.call(this, props, true);\r\n            break;\r\n\r\n        //肩 取消复制\r\n        case CARD_BUTTON.pasteCancel:\r\n            copyControl.call(this, props, false);\r\n            break;\r\n\r\n        //肩 粘贴至末行\r\n        case CARD_BUTTON.pasteTail:\r\n            let lastIndex = props.cardTable.getNumberOfRows(CARD.table_code);\r\n            props.cardTable.insertRowsAfterIndex(CARD.table_code, getPasteRows(props), lastIndex);\r\n            copyControl.call(this, props, false);\r\n            props.cardTable.selectAllRows(CARD.table_code, false);\r\n            break;\r\n\r\n        //行 粘贴至此\r\n        case CARD_BUTTON.pasteHere:\r\n            props.cardTable.insertRowsAfterIndex(CARD.table_code, getPasteRows(props), index);\r\n            copyControl.call(this, props, false);\r\n            props.cardTable.selectAllRows(CARD.table_code, false);\r\n            break;\r\n    }\r\n    if (![CARD_BUTTON.unfold, CARD_BUTTON.fold].includes(key)) {\r\n        props.cardTable.setStatus(CARD.table_code, STATUS.edit);\r\n    }\r\n}\r\n\r\n//复制时的状态控制\r\nfunction copyControl(props, flag) {\r\n    //肩部按钮显示控制\r\n    props.button.setButtonVisible({\r\n        [CARD_BUTTON.addRow]: !flag,\r\n        [CARD_BUTTON.deleteRow]: !flag,\r\n        [CARD_BUTTON.copyRows]: !flag,\r\n\r\n        [CARD_BUTTON.pasteTail]: flag,\r\n        [CARD_BUTTON.pasteCancel]: flag,\r\n    });\r\n    props.cardTable.setAllCheckboxAble(CARD.table_code, !flag);\r\n    this.setState({ isPaste: flag });\r\n}\r\n\r\n/**\r\n * 获取粘贴行数据\r\n *\r\n * @returns 返回粘贴行数据\r\n */\r\nfunction getPasteRows(props) {\r\n    let checkedRows = props.cardTable.getCheckedRows(CARD.table_code);\r\n    let selectRowCopy = deepClone(checkedRows);\r\n    let selectArr = selectRowCopy.map(item => {\r\n        item.data.selected = false;\r\n        item.data.values[PRIMARY_KEY.head_id] ? item.data.values[PRIMARY_KEY.head_id].value = null : null;\r\n        item.data.values[PRIMARY_KEY.body_id] ? item.data.values[PRIMARY_KEY.body_id].value = null : null;\r\n        return item.data;\r\n    });\r\n    return selectArr;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPage, base, high } from 'nc-lightapp-front';\r\nimport { initTemplate } from './events/initTemplate';\r\nimport { buttonClick } from './events/buttonClick';\r\nimport { beforeHeadEvent } from './events/beforeHeadEvent';\r\nimport { beforeTableEvent } from './events/beforeTableEvent';\r\nimport { afterHeadEvent } from './events/afterHeadEvent';\r\nimport { afterTableEvent } from './events/afterTableEvent';\r\nimport { bodySelectedEvent, bodySelectedAllEvent } from './events/bodySelectedEvent';\r\nimport { MULTILANG, CARD, PRIMARY_KEY, CARD_BUTTON, DATASOURCE, STATUS, BILL_TYPE_CODE } from '../constant';\r\nimport { pageClick, cardCommit } from './events/cardOperator';\r\nimport { bodyButtonClick } from './events/bodyButtonClick';\r\n\r\n/**\r\n* @description: 卡片\r\n*/\r\nconst { NCAffix } = base;\r\n\r\nclass Card extends Component {\r\n        constructor(props) {\r\n                super(props);\r\n                this.state = {\r\n                        json: {},\r\n                        showUploader: false,\r\n                        billInfo: {},\r\n                        compositeData: null, //指派信息\r\n                        compositeDisplay: false, //是否显示指派\r\n                        curPk: null, //当前选中数据的pk\r\n                        showApproveDetail: false, //是否显示审批详情\r\n                        billId: null\r\n                };\r\n        }\r\n\r\n        componentWillMount() {\r\n                // json： 多语json格式参数； \r\n                // status： 是否请求到json多语，可用来判断多语资源是否请求到并进行一些别的操作； \r\n                // inlt： 可用来进行占位符的一些操作\r\n                let callback = (json, status, inlt) => {\r\n                        if (status) {\r\n                                initTemplate.call(this, this.props); // 如模板内也有多语处理，平台推荐模板加载操作放于此处， 在取到json多语资源后用传参的方式传入intemplate模板函数中\r\n\r\n                                // 保存json和inlt到页面state中并刷新页面\r\n                                this.setState({ json, inlt })\r\n                        }\r\n                }\r\n                this.props.MultiInit.getMultiLang({ moduleId: MULTILANG.moduleId, domainName: MULTILANG.domainName, callback });\r\n\r\n                // 关闭浏览器\r\n                window.onbeforeunload = () => {\r\n                        let status = this.props.cardTable.getStatus(CARD.table_code);\r\n                        if (status == STATUS.edit) {\r\n                                return this.state.json['96H10108-000007'];/* 国际化处理： 当前单据未保存，您确认离开此页面？*/\r\n                        }\r\n                };\r\n        }\r\n\r\n        componentDidMount() {\r\n\r\n        }\r\n\r\n        handlePageInfoChange = (props, id) => {\r\n                pageClick({ ...props, json: this.state.json }, id);\r\n        }\r\n\r\n        //获取列表肩部信息\r\n        getTableHead = () => (\r\n                <div className=\"shoulder-definition-area\">\r\n                        <div className=\"definition-icons\">\r\n                                {this.props.button.createButtonApp({\r\n                                        area: CARD.shoulder_btn_code,\r\n                                        onButtonClick: bodyButtonClick.bind(this),\r\n                                        popContainer: document.querySelector('.header-button-area')\r\n                                })}\r\n                        </div>\r\n                </div>\r\n        );\r\n\r\n        //指派提交\r\n        getAssignUser = (value) => {\r\n                cardCommit({ ...this.props, json: this.state.json }, {\r\n                        pks: this.state.curPk,\r\n                        userObj: value\r\n                });\r\n                this.compositeTurnOff();\r\n        };\r\n\r\n        //关闭指派\r\n        compositeTurnOff = () => {\r\n                this.setState({\r\n                        compositeData: null,\r\n                        compositeDisplay: false\r\n                });\r\n        };\r\n\r\n        render() {\r\n                let { form, cardPagination, BillHeadInfo, cardTable } = this.props;\r\n                let { createCardPagination } = cardPagination;\r\n                let { createForm } = form;\r\n                let { createCardTable } = cardTable;\r\n                let { createBillHeadInfo } = BillHeadInfo;\r\n                let { NCUploader, BillTrack, ApprovalTrans, ApproveDetail } = high;\r\n                let status = this.props.getUrlParam(STATUS.status);\r\n                let id = this.props.getUrlParam(PRIMARY_KEY.id);\r\n                let billNo = this.props.form.getFormItemsValue(CARD.page_code, PRIMARY_KEY.bill_no);\r\n                return (\r\n                        <div className=\"nc-bill-card\">\r\n                                <div className=\"nc-bill-top-area\">\r\n                                        <NCAffix>\r\n                                                <div className=\"nc-bill-header-area\">\r\n                                                        <div>\r\n                                                                {createBillHeadInfo({\r\n                                                                        title: this.state.json[CARD.page_title],//标题\r\n                                                                        billCode: billNo && billNo.value,//单据号\r\n                                                                        backBtnClick: buttonClick.bind(this, this.props, CARD_BUTTON.back)\r\n                                                                })}\r\n                                                        </div>\r\n                                                        <div className=\"header-button-area\">\r\n                                                                {this.props.button.createButtonApp({\r\n                                                                        area: CARD.head_btn_code,\r\n                                                                        onButtonClick: buttonClick.bind(this)\r\n                                                                })}\r\n                                                        </div>\r\n                                                        {status == STATUS.browse && id &&\r\n                                                                <div className=\"header-cardPagination-area\" style={{ float: 'right' }}>\r\n                                                                        {createCardPagination({\r\n                                                                                dataSource: DATASOURCE,\r\n                                                                                pkname: PRIMARY_KEY.head_id,\r\n                                                                                handlePageInfoChange: this.handlePageInfoChange\r\n                                                                        })}\r\n                                                                </div>\r\n                                                        }\r\n                                                </div>\r\n                                        </NCAffix>\r\n                                        <div className=\"nc-bill-form-area\">\r\n                                                {createForm(CARD.form_id, {\r\n                                                        onAfterEvent: afterHeadEvent,\r\n                                                        onBeforeEvent: beforeHeadEvent\r\n                                                })}\r\n                                        </div>\r\n                                </div>\r\n\r\n                                <div className=\"nc-bill-bottom-area\">\r\n                                        <div className=\"nc-bill-table-area\">\r\n                                                {createCardTable(CARD.table_code, {\r\n                                                        tableHead: this.getTableHead.bind(this),\r\n                                                        showCheck: true,\r\n                                                        showIndex: true,\r\n                                                        onSelected: bodySelectedEvent,\r\n                                                        onSelectedAll: bodySelectedAllEvent,\r\n                                                        onBeforeEvent: beforeTableEvent,\r\n                                                        onAfterEvent: afterTableEvent,\r\n                                                        modelSave: buttonClick.bind(this, { ...this.props, json: this.state.json }, CARD_BUTTON.save, undefined, true),\r\n                                                })}\r\n                                        </div>\r\n                                </div>\r\n\r\n                                {/* 附件 */}\r\n                                {this.state.showUploader && (\r\n                                        <NCUploader\r\n                                                placement={'bottom'}\r\n                                                {...this.state.billInfo}\r\n                                                onHide={() => {\r\n                                                        this.setState({\r\n                                                                showUploader: false\r\n                                                        });\r\n                                                }}\r\n                                        />\r\n                                )}\r\n\r\n                                {/*联查单据追溯*/}\r\n                                {\r\n                                        <BillTrack\r\n                                                show={this.state.showBillTrack}\r\n                                                close={() => {\r\n                                                        this.setState({ showBillTrack: false });\r\n                                                }}\r\n                                                pk={this.state.billTrackBillId}\r\n                                                type={this.state.billTrackBillType}\r\n                                        />\r\n                                }\r\n\r\n                                {/* 指派 */}\r\n                                {this.state.compositeDisplay && (\r\n                                        <ApprovalTrans\r\n                                                title={this.state.json['96H10108-000018']} /* 国际化处理： 指派*/\r\n                                                data={this.state.compositeData}\r\n                                                display={this.state.compositeDisplay}\r\n                                                getResult={this.getAssignUser}\r\n                                                cancel={this.compositeTurnOff}\r\n                                        />\r\n                                )}\r\n\r\n                                {/* 联查审批详情 */}\r\n                                {\r\n                                        <ApproveDetail\r\n                                                show={this.state.showApproveDetail}\r\n                                                billtype={BILL_TYPE_CODE}\r\n                                                billid={this.state.billId}\r\n                                                close={() => {\r\n                                                        this.setState({\r\n                                                                showApproveDetail: false\r\n                                                        });\r\n                                                }}\r\n                                        />\r\n                                }\r\n                        </div>\r\n                );\r\n        }\r\n}\r\n\r\nCard = createPage({\r\n        billinfo: {\r\n                billtype: 'card',\r\n                pagecode: CARD.page_code,\r\n                headcode: CARD.form_id,\r\n                bodycode: CARD.table_code\r\n        }\r\n})(Card);\r\nexport default Card;\r\n","import { cardCache } from 'nc-lightapp-front';\r\nimport { CARD, CARD_BUTTON, STATUS, FIELD, CARD_CACHE, PRIMARY_KEY } from '../../constant';\r\nimport { cardCreate, getCardData, copyClear } from './cardOperator';\r\nimport { bodyButtonClick } from './bodyButtonClick';\r\nimport { buttonVisibilityControl } from './buttonVisibilityControl';\r\nimport { afterHeadEvent } from './afterHeadEvent';\r\nimport { getBusinessInfo } from 'nc-lightapp-front';\r\n\r\n/**\r\n* @description: 卡片模板渲染\r\n*/\r\nexport function initTemplate(props) {\r\n        props.createUIDom({},\r\n                (data) => {\r\n                        if (data) {\r\n                                if (data.button) {\r\n                                        let button = data.button;\r\n                                        props.button.setButtons(button);\r\n                                        buttonVisibilityControl(props);\r\n                                }\r\n                                if (data.template) {\r\n                                        let meta = data.template;\r\n                                        meta = modifierMeta.call(this, props, meta);\r\n                                        props.meta.setMeta(meta, () => {\r\n                                                let status = this.props.getUrlParam(STATUS.status);\r\n                                                let id = this.props.getUrlParam(PRIMARY_KEY.id);\r\n                                                if (status === STATUS.add) { //新增\r\n                                                        cardCreate(this.props);\r\n                                                } else if (id) {\r\n                                                        getCardData(this.props, id, false, copyClear);\r\n                                                }\r\n                                        });\r\n                                }\r\n                                if (data.context && data.context.pk_org) {\r\n                                        if (props.getUrlParam(STATUS.status) === STATUS.add) {\r\n                                                //设置默认组织\r\n                                                // let { pk_org, org_Name } = data.context;\r\n                                                // props.form.setFormItemsValue(CARD.form_id, {\r\n                                                //         [FIELD.org]: { value: pk_org, display: org_Name }\r\n                                                // });\r\n                                                // afterHeadEvent(props, CARD.form_id, FIELD.org, { display: org_Name, value: pk_org }, { display: null, value: null });\r\n\r\n                                                props.form.setFormItemsValue(CARD.form_id, {\r\n                                                        'billdate': { value: getBusinessInfo().businessDate, display: getBusinessInfo().businessDate },\r\n                                                        'maketime': { value: getBusinessInfo().businessDate, display: getBusinessInfo().businessDate },\r\n                                                        'creationtime': {\r\n                                                                value: getBusinessInfo().businessDate, display:\r\n                                                                        getBusinessInfo().businessDate\r\n                                                        },\r\n                                                        'pk_group': { display: getBusinessInfo().groupName, value: getBusinessInfo().groupId },\r\n                                                        'approvestatus': { value: STATUS.NOSTATE, display: '自由' },\r\n                                                        'billmaker': { display: getBusinessInfo().userName, value: getBusinessInfo().userId },\r\n                                                        'creator': { display: getBusinessInfo().userName, value: getBusinessInfo().userId }\r\n                                                });\r\n\r\n\r\n                                        }\r\n                                        // 将组织信息缓存\r\n                                        let { setDefData } = cardCache;\r\n                                        setDefData(CARD_CACHE.key, CARD_CACHE.dataSource, data.context);\r\n                                }\r\n                                //表体统一参照过滤\r\n                                /*\r\n                                props.cardTable.setQueryCondition(CARD.table_code, {\r\n                                        department: () => {\r\n                                                return {\r\n                                                        pk_org: props.form.getFormItemsValue(CARD.form_id, FIELD.org).value\r\n                                                };\r\n                                        }\r\n                                });\r\n                                */\r\n                        }\r\n                }\r\n        )\r\n}\r\n\r\nfunction modifierMeta(props, meta) {\r\n        //表头参照过滤\r\n        meta[CARD.form_id].items.map(item => {\r\n                if (item.attrcode === FIELD.org) { //财务组织\r\n                        item.queryCondition = () => {\r\n                                return {\r\n                                        funcode: props.getSearchParam('c')//appcode获取\r\n                                };\r\n                        };\r\n                }\r\n        });\r\n\r\n        for (let item of Object.keys(meta.gridrelation)) {\r\n                meta[item].items.push({\r\n                        attrcode: 'opr',\r\n                        label: this.state.json['96H10108-000006'],/* 国际化处理： 操作*/\r\n                        itemtype: 'customer',\r\n                        fixed: 'right',\r\n                        className: 'table-opr',\r\n                        visible: true,\r\n                        width: 200,\r\n                        render: (text, record, index) => {\r\n                                let status = props.getUrlParam(STATUS.status);\r\n                                let buttonAry = [];\r\n                                if (status === STATUS.browse) { //浏览态\r\n                                        buttonAry = [record.expandRowStatus ? CARD_BUTTON.fold : CARD_BUTTON.unfold];\r\n                                } else { //编辑态\r\n                                        buttonAry = this.state.isPaste ? [CARD_BUTTON.pasteHere] : [CARD_BUTTON.expand, CARD_BUTTON.insertRow, CARD_BUTTON.delRow, CARD_BUTTON.copyRow];\r\n                                }\r\n                                return props.button.createOprationButton(buttonAry, {\r\n                                        area: CARD.body_btn_code,\r\n                                        buttonLimit: 4,\r\n                                        onButtonClick: (props, key) => bodyButtonClick.call(this, props, key, text, record, index)\r\n                                });\r\n                        }\r\n                })\r\n        }\r\n        return meta;\r\n}\r\n","import { promptBox } from 'nc-lightapp-front';\r\nimport { CARD, CARD_BUTTON, STATUS } from '../../constant';\r\nimport { cardBack, cardCreate, cardSave, cardUpdate, cardDelete, cardCancel, cardRefresh, cardCopy, cardAttachment, cardBillTrack, cardCommit, cardUnCommit, cardLinkApprove } from './cardOperator';\r\n\r\n/**\r\n* @description: 卡片页头部按钮操作\r\n* @param: isFromSide 是否来自侧拉区域\r\n* @param: id 当前按钮名\r\n*/\r\nexport function buttonClick(props, id, hotkey, isFromSide) {\r\n    switch (id) {\r\n        //返回\r\n        case CARD_BUTTON.back:\r\n            cardBack(props);\r\n            break;\r\n\r\n        //头部 新增\r\n        case CARD_BUTTON.create:\r\n            cardCreate(props);\r\n            break;\r\n\r\n        //头部 保存\r\n        case CARD_BUTTON.save:\r\n            cardSave({ ...props, json: this.state.json }).then(() => {\r\n                if (isFromSide) {\r\n                    props.cardTable.closeModel(CARD.table_code);\r\n                }\r\n            });\r\n            break;\r\n\r\n        //头部 保存新增\r\n        case CARD_BUTTON.saveAdd:\r\n            cardSave({ ...props, json: this.state.json }).then(flag => {\r\n                if (flag) {\r\n                    cardCreate(props);\r\n                }\r\n            });\r\n            break;\r\n\r\n        //头部 保存提交\r\n        case CARD_BUTTON.saveCommit:\r\n            cardSave({ ...props, json: this.state.json }).then(flag => {\r\n                if (flag) {\r\n                    cardCommit.call(this, { ...props, json: this.state.json });\r\n                }\r\n            });\r\n            break;\r\n\r\n        //头部 修改\r\n        case CARD_BUTTON.update:\r\n            cardUpdate(props);\r\n            break;\r\n\r\n        //头部 复制\r\n        case CARD_BUTTON.copy:\r\n            cardCopy(props);\r\n            break;\r\n\r\n        //头部 删除\r\n        case CARD_BUTTON.delete:\r\n            promptBox({\r\n                color: STATUS.warning,\r\n                title: this.state.json['96H10108-000000'],/* 国际化处理： 删除*/\r\n                content: this.state.json['96H10108-000001'],/* 国际化处理： 确定删除吗？*/\r\n                beSureBtnClick: () => {\r\n                    cardDelete({ ...props, json: this.state.json });\r\n                }\r\n            });\r\n            break;\r\n\r\n        // 头部 取消\r\n        case CARD_BUTTON.cancel:\r\n            promptBox({\r\n                color: STATUS.warning,\r\n                title: this.state.json['96H10108-000002'],/* 国际化处理： 取消*/\r\n                content: this.state.json['96H10108-000003'],/* 国际化处理： 是否确认要取消?*/\r\n                beSureBtnClick: () => {\r\n                    cardCancel({ ...props, json: this.state.json });\r\n                }\r\n            });\r\n            break;\r\n\r\n        //头部 刷新\r\n        case CARD_BUTTON.refresh:\r\n            cardRefresh({ ...props, json: this.state.json });\r\n            break;\r\n\r\n        //附件\r\n        case CARD_BUTTON.attachment:\r\n            cardAttachment.call(this, props);\r\n            break;\r\n\r\n        //单据追溯\r\n        case CARD_BUTTON.billTrack:\r\n            cardBillTrack.call(this, props);\r\n            break;\r\n\r\n        //审批详情\r\n        case CARD_BUTTON.approvalLink:\r\n            cardLinkApprove.call(this, props);\r\n            break;\r\n\r\n        //单据提交\r\n        case CARD_BUTTON.commit:\r\n            cardCommit.call(this, { ...props, json: this.state.json });\r\n            break;\r\n\r\n        //单据收回\r\n        case CARD_BUTTON.unCommit:\r\n            cardUnCommit({ ...props, json: this.state.json });\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n","/**\r\n* @description: 表头编辑前事件\r\n* @param: moduleId 区域编码\r\n* @param: key 当前字段编码\r\n* @return: 布尔 true表示可编辑\r\n*/\r\nexport function beforeHeadEvent(props, moduleId, key, value, data) {\r\n        return true;\r\n}","/**\r\n* @description: 表体编辑前事件\r\n* @param: moduleId 区域编码\r\n* @param: key 当前字段编码\r\n* @return: 布尔 true表示可编辑\r\n*/\r\nexport function beforeTableEvent(props, moduleId, key, value, index, record, status) {\r\n        return true;\r\n}\r\n","/**\r\n* @description: 表体编辑后事件\r\n* @param: moduleId 区域编码\r\n* @param: key 当前字段编码\r\n*/\r\nexport function afterTableEvent(props, moduleId, key, value, changedrows, index, record, type, method) {\r\n        \r\n}\r\n","import { CARD, CARD_DISABLED_BUTTON } from \"../../constant\";\r\n\r\n//单选\r\nexport function bodySelectedEvent(props, moduleId, record, index, status) {\r\n    let checkedRows = props.cardTable.getCheckedRows(CARD.table_code);\r\n    if (checkedRows.length > 0) {\r\n        props.button.setButtonDisabled(CARD_DISABLED_BUTTON, false);\r\n    } else {\r\n        props.button.setButtonDisabled(CARD_DISABLED_BUTTON, true);\r\n    }\r\n}\r\n\r\n//全选\r\nexport function bodySelectedAllEvent(props, moduleId, status, length) {\r\n    props.button.setButtonDisabled(CARD_DISABLED_BUTTON, !(status && length > 0));\r\n}\r\n"],"sourceRoot":""}